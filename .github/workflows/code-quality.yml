name: Quality Analysis

on:
  push:
    branches: [ "develop" ]
#   pull_request:
    # branches: [ "main" ]
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-quality-${{ hashFiles('**/meson.build') }}
          restore-keys: |
            ${{ runner.os }}-apt-quality-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format clang-tidy meson ninja-build libpcre2-dev

      - name: Check code formatting
        run: |
          # Find all .c and .h files and check their formatting
          find source includes -name "*.c" -o -name "*.h" | xargs clang-format -i -style=file
          # Check if there are any changes after formatting
          git diff --exit-code || {
            echo "❌ Code formatting check failed. Please run 'just format' locally and commit the changes.";
            exit 1;
          }

      - name: Run static analysis with clang-tidy
        run: |
          # Generate compile_commands.json for clang-tidy
          meson setup .build-tidy --buildtype=debug -Dtests=false -Dexamples=false -Dbenchmarks=false
          
          # Run clang-tidy using the compilation database
          find source includes -name "*.c" -o -name "*.h" | xargs clang-tidy -p .build-tidy --config-file=.clang-tidy
          
          # Check if there were any static analysis errors
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "❌ Static analysis found issues that need to be fixed."
            exit $exit_code
          fi